head	1.1;
access;
symbols;
locks
	engler:1.1; strict;
comment	@ * @;


1.1
date	96.03.23.00.22.14;	author engler;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* Power: raise base to n-th power: n > 0; specialized for a runtime constant n. */
v_fptr specialize_power(int n) {
	v_reg_type x, sum;
	int i;

        v_lambda("power", "%d", &x, V_LEAF, (void *)malloc(sizeof(v_code)*200));
		/* Allocate accumulator */
		v_getreg(&sum, V_D, V_TEMP);
		v_movf(sum, x);		/* initialize sum */

		/* Specialize power to x^n by unrolling the loop to multiply
	 	   x n times: (x * x * ... * x). */
		for(i = 0; i < n - 1; i++)
			v_mulf(sum, sum, x);

		v_retf(sum);	/* return x ^ n */

        return v_end().f;	/* return pointer to result. */
}
@
